/*! For license information please see main.e5ee5d167c04c7e8fc03.hot-update.js.LICENSE.txt */
"use strict";self.webpackHotUpdatetblazer("main",{"./app/components/Canvas/Home/index.js":(t,e,s)=>{s.r(e),s.d(e,{default:()=>a});var i=s("./node_modules/ogl/src/core/Transform.js"),h=s("./node_modules/ogl/src/extras/Plane.js"),r=s("./node_modules/gsap/index.js"),l=s("./node_modules/lodash/map.js"),o=s.n(l),n=s("./app/components/Canvas/Home/Media.js");class a{constructor({gl:t,scene:e,sizes:s}){this.gl=t,this.scene=e,this.sizes=s,this.group=new i.Transform,this.galleryElement=document.querySelector(".home__gallery"),this.mediaElements=document.querySelectorAll(".home__gallery__media__image"),this.x={current:0,target:0,ease:.1},this.y={current:0,target:0,ease:.1},this.scrollCurrent={x:0,y:0},this.scroll={x:0,y:0},this.createGeometry(),this.createGallery(),this.group.setParent(e),this.show()}createGeometry(){this.geometry=new h.Plane(this.gl,{widthSegments:20,heightSegments:16})}createGallery(){this.medias=o()(this.mediaElements,((t,e)=>new n.default({element:t,geometry:this.geometry,index:e,gl:this.gl,scene:this.group,sizes:this.sizes})))}show(){o()(this.medias,(t=>t.show()))}hide(){o()(this.medias,(t=>t.hide()))}onResize(t){this.sizes=t.sizes,this.galleryBounds=this.galleryElement.getBoundingClientRect(),this.gallerySizes={width:this.galleryBounds.width/window.innerWidth*this.sizes.width,height:this.galleryBounds.height/window.innerHeight*this.sizes.height},this.scroll.x=this.x.target=0,this.scroll.y=this.y.target=0,o()(this.medias,(e=>e.onResize(t,this.scroll)))}onTouchDown({x:t,y:e}){this.scrollCurrent.x=this.scroll.x,this.scrollCurrent.y=this.scroll.y}onTouchMove({x:t,y:e}){const s=t.start-t.end,i=e.start-e.end;this.x.target=this.scrollCurrent.x-s,this.y.target=this.scrollCurrent.y-i}onTouchUp({x:t,y:e}){}onWheel({pixelX:t,pixelY:e}){this.x.target+=t,this.y.target+=e}update(){if(!this.galleryBounds)return;const t=this.x.target-this.x.current,e=this.y.target-this.y.current,s=.01*Math.sqrt(t*t+e*e);this.x.current=r.default.utils.interpolate(this.x.current,this.x.target,this.x.ease),this.y.current=r.default.utils.interpolate(this.y.current,this.y.target,this.y.ease),this.scroll.x<this.x.current?this.x.direction="right":this.x.direction="left",this.scroll.y<this.y.current?this.y.direction="up":this.y.direction="down",this.scroll.x=this.x.current,this.scroll.y=this.y.current,o()(this.medias,((t,e)=>{const i=t.mesh.scale.x/2,h=t.mesh.scale.y/2;if("left"===this.x.direction){t.mesh.position.x+i<-this.sizes.width/2&&(t.extra.x+=this.gallerySizes.width,t.mesh.rotation.z=r.default.utils.random(.02*-Math.PI,.02*Math.PI))}else if("right"===this.x.direction){t.mesh.position.x-i>this.sizes.width/2&&(t.extra.x-=this.gallerySizes.width,t.mesh.rotation.z=r.default.utils.random(.02*-Math.PI,.02*Math.PI))}if("up"===this.y.direction){t.mesh.position.y+h/2<-this.sizes.height/2&&(t.extra.y+=this.gallerySizes.height,t.mesh.rotation.z=r.default.utils.random(.02*-Math.PI,.02*Math.PI))}else if("down"===this.y.direction){t.mesh.position.y-h/2>this.sizes.height/2&&(t.extra.y-=this.gallerySizes.height,t.mesh.rotation.z=r.default.utils.random(.02*-Math.PI,.02*Math.PI))}t.update(this.scroll,s)}))}destroy(){this.scene.removeChild(this.group)}}}},(function(t){t.h=()=>"42aef820d6dd420c2111"}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,