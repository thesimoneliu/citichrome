import { FilledMinimalLinkToDocumentField, LinkField } from "@prismicio/types/dist/graphql";
import { LinkResolverFunction } from "./types";
/**
 * Resolves any type of link field to a URL
 *
 * @typeParam LinkResolverLinkToDocumentField - Link resolver link to document
 *   field type
 * @typeParam LinkResolverFunctionReturnType - Link resolver function return
 *   type
 * @param linkField - Any kind of link field to resolve
 * @param linkResolver - A link resolver function, without it you're expected to
 *   use the `routes` from the API
 *
 * @returns Resolved URL, null if provided link is empty
 * @experimental
 * @see Prismic link resolver documentation: {@link https://prismic.io/docs/technologies/link-resolver-javascript}
 * @see Prismic API `routes` options documentation: {@link https://prismic.io/docs/technologies/route-resolver-nuxtjs}
 */
export declare const asLink: <LinkResolverLinkToDocumentField extends FilledMinimalLinkToDocumentField = FilledMinimalLinkToDocumentField, LinkResolverFunctionReturnType = string>(linkField: LinkResolverLinkToDocumentField | import("@prismicio/types/dist/graphql").FilledMinimalLinkToWebField | import("@prismicio/types/dist/graphql").FilledMinimalLinkToMediaField | null, linkResolver?: LinkResolverFunction<LinkResolverLinkToDocumentField, LinkResolverFunctionReturnType> | null | undefined) => string | LinkResolverFunctionReturnType | null;
